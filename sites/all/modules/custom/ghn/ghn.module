<?php
/**
 * Form alter 
 **/
function ghn_form_alter(&$form,&$form_state,$form_id) {
//krumo($form_id);
         $form['options']['status']['#value'] = 1;
         switch($form_id) {
               case "profile2_edit_main_form":
                     $tmp = var_export($form['profile_main']['field_choose_membership_type']['und'][0]['registration_type']['#options'],TRUE);
                     unset($form['profile_main']['field_choose_membership_type']['und'][0]['registration_type']['#options']['']);
                     $form['profile_main']['field_choose_membership_type']['und'][0]['registration_type']['#title'] = "Memberhsip Type";
                     break;
               case "service_request_node_form":
/*
$tmp = var_export($form_state['input'],TRUE);
                    $options = array('0'=>'yes','1'=>'no');
                    if (!empty($form_state['input'])) {
$tmp = var_export($form_state['input']['field_clinical_services'],TRUE);
//drupal_set_message($tmp);
                      if ($form_state['input']['field_clinical_services']['und'] == 'Clinical Services') {
                          $options = _ghn_post_form_options(1);
                       }
                      if ($form_state['input']['field_clinical_services']['und'] == 'Medical Equipment and Supplies') {

                          $options = _ghn_post_form_options(2);
                       }
                       if ($form_state['input']['field_clinical_services']['und'] == 'Educational Activities') {
                          $options = _ghn_post_form_options(3);
                        }
                    }
                    $form['#tree'] = FALSE;
// adding AJAX (AHAH) feature
                    $ajax  = array(
                              'callback' => 'ghn_post_options',   
                              'wrapper' => 'post-choices',// The div id where the returned HTML will be applied.
                              'effect' => 'slide',
                    );
                    $form['field_clinical_services']['und']['#ajax'] = $ajax;
                    if (is_array($options)&&(count($options) > 0)):
                       unset($form['post_choices_fieldset']);
                       $form['post_choices_fieldset'] = array(
                          '#prefix' => '<div class="clearfix" class="post-choices-wrapper">',
                          '#suffix' => '</div>',
                          '#type' => 'fieldset',
                          '#weight' => 4,
                         );
                         $form['post_choices_fieldset']['choices'] = array(
                              '#title' => t('Choose your option'),
                              '#prefix' => '<div class="clearfix" id="post-choices">',
                              '#suffix' => '</div>',
                              '#type' => 'radios',
                              '#options' => $options,
                          );
                      endif;
$tmp = var_export($form,TRUE);
//drupal_set_message($tmp);
*/
                      array_push($form['#submit'],'ghn_post_submit');  
                      break;
               case "service_offering_node_form":
/*
                    $form['field_clinical_services']['und']['#ajax'] = array(
                         'callback' => 'ghn_post_options',   // The URL path that the hook_menu will trigger the callback on.
                         'wrapper' => 'post-choices',   // The div id where the returned HTML will be applied.
                         'method' => 'replace',
                         'effect' => 'fade',
                     );
                     $form['choices'] = array(
                          '#tree' => FALSE,
                          '#weight' => 2,
                          '#prefix' => '<div class="clearfix" id="post-choice-wrapper">',
                          '#suffix' => '</div>',
                      );
                      // Container for just the clinical choices.
                      $form['choices']['choice'] = array(
                           '#prefix' => '<div id="post-choices">',
                           '#suffix' => '</div>',
                      );
// need to add affiliation checkboxes as this may belong to one of their 
// affiliations
                      global $user;
                      $uid = $user->uid;
                      $results = db_query("SELECT field_affiliations_value AS affiliation FROM {field_data_field_affiliations} a LEFT JOIN {node} n ON n.nid = a.entity_id WHERE n.uid = $uid ORDER BY affiliation");
                      foreach ($results AS $result) {
                              $options[] = $result->affiliation;
                      }
                      $form['affiliations'] = array(
                                   '#title' => 'Check affiliations connected with this Resource',
                                   '#type' => 'checkboxes',
                                   '#options' => $options,
                                   '#weight' => 3,
                      );
                    //array_push($form['#submit'],'ghn_post_submit');  
*/
                    $original = array_shift($form['actions']['submit']['#submit']);
                    $form['actions']['submit']['#submit'][]='ghn_post_submit';
                    $form['actions']['submit']['#submit'][]=$original;
                    break;
               case "user_login":
                    array_push($form['#submit'],'ghn_user_submit');
$tmp = var_export($form,TRUE);
print '<pre>';
//print $tmp;
print '</pre>';
                    break;
               case "user_profile_form":
                    array_push($form['#submit'],'ghn_user_submit');
                    //$form['actions']['submit']['#submit'][]='ghn_user_submit';
$tmp = var_export($form,TRUE);
print '<pre>';
//print $tmp;
print '</pre>';
                    break;
               case "profile2_edit_general_form":
                    array_push($form['#submit'],'ghn_user_submit');
                    //$form['actions']['submit']['#submit'][]='ghn_user_submit';
                    break;
               case "affiliations_node_form":
                    //$original = array_shift($form['actions']['submit']['#submit']);
                    $form['actions']['submit']['#submit'][]='ghn_node_submit';
                    //$form['actions']['submit']['#submit'][]=$original;
//$tmp = var_export($form['actions']['submit']['#submit'],TRUE);
//$tmp = var_export($original,TRUE);
print '<pre>';
//print $tmp;
print '</pre>';
                    break;
         }
}
/**
 * redirecting node form submission 
 **/
function ghn_node_submit(&$form,&$form_state) {
   global $user;
   foreach ($form AS $keys => $value) {
      if (($keys == "form_id") && (!is_array($value))) {
         $tmp = var_export($value,TRUE);
         switch ($value) {
              case "affiliations_node_form":
                    drupal_set_message("Your affiliations are updated");
                    break;
          }
print '<pre>';
//print $tmp;
print '</pre>';
      }
}
   $form_state['redirect'] = 'dashboard/'.$user->uid;
}
/**
 * redirecting user login form submission 
 **/
function ghn_user_submit(&$form,&$form_state) {
         global $user;
         $form_state['redirect'] = 'dashboard/'.$user->uid;
}
/**
 * hook_menu
 **/
function ghn_menu() {
    $items['main-profile'] = array(
        'page callback' => '_profile2_main_form',
        'page arguments' => array(),
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    $items['affiliations/%'] = array(
        'page callback' => '_ghn_user_affiliations',
        'page arguments' => array(1),
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    $items['general-profile'] = array(
        'page callback' => '_profile2_general_form',
        'page arguments' => array(),
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    $items['detail-profile'] = array(
        'page callback' => '_profile2_detail_form',
        'page arguments' => array(),
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    $items['dashboard/%'] = array(
        'page callback' => '_ghn_user_dashboard',
        'page arguments' => array(1),
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    return $items;
}
/**
 * Affiliation right sidebar
 **/
function _ghn_user_affiliations($uid) {
// get all the affiliations checked by this user
// get all the existing content for the checked affiliations and present as link
// Add a link to add more affiliations
     $ret = '';
     $results = db_query("SELECT field_affiliations_value AS affiliation FROM {field_data_field_affiliations} a LEFT JOIN {node} n ON n.nid = a.entity_id WHERE n.uid = $uid ORDER BY affiliation");
     foreach ($results AS $result) {
             $ret .= l("Add your ".$result->affiliation." details","node/add/".strtolower($result->affiliation)); 
     }
return $ret;

}

/**
 * profile2 is not registering profile pages with the menu
 * this is the hack for it, so page existing manager can find it 
 * for panels consumption
 **/
function _profile2_main_form() {
    global $user;
    module_load_include('inc', 'profile2_page', 'profile2_page');
    $profile2 = profile2_by_uid_load($user->uid, 'main');
    $entity_form = entity_ui_get_form('profile2', $profile2, 'edit');
    return $entity_form;    
}
function _profile2_general_form() {
    global $user;
    module_load_include('inc', 'profile2_page', 'profile2_page');
    $profile2 = profile2_by_uid_load($user->uid, 'general');
    $entity_form = entity_ui_get_form('profile2', $profile2, 'edit');
    return $entity_form;    
}
function _profile2_detail_form() {
    global $user;
    $uid = $user->uid;
    module_load_include('inc', 'profile2_page', 'profile2_page');
    $results = db_query("SELECT field_choose_membership_type_registration_type AS memtype FROM {field_data_field_choose_membership_type} m LEFT JOIN {profile} p ON m.entity_id = p.pid WHERE p.uid = :uid",array(':uid'=>$uid));
    foreach ($results as $result) {
            $mtype = $result->memtype;
    }
    switch ($mtype) {
           case "individual": // individual role
                $profile2 = profile2_by_uid_load($user->uid, 'individual');
                $entity_form = entity_ui_get_form('profile2', $profile2, 'edit');
                break;
           case "hospital":
                $profile2 = profile2_by_uid_load($user->uid, 'hospital');
                $entity_form = entity_ui_get_form('profile2', $profile2, 'edit');
                break;
           case "organization":
                $profile2 = profile2_by_uid_load($user->uid, 'organization');
                $entity_form = entity_ui_get_form('profile2', $profile2, 'edit');
                break;
           case "government":
                $profile2 = profile2_by_uid_load($user->uid, 'government');
                $entity_form = entity_ui_get_form('profile2', $profile2, 'edit');
                break;
           default:
                $entity_form = "No Detail Profile";
                break;
                
    }
    return $entity_form;    
}
/**
 * User dashboard
 **/
function _ghn_user_dashboard($uid) {
    $ret = '';
    global $base_url,$user;
    $row = array();
    $rows = array(); 
    // get Affiliations 
    // get user name
    $results = db_query("SELECT a.field_address_name_line AS name FROM {field_data_field_address} a LEFT JOIN {profile} p ON p.pid = a.entity_id WHERE p.uid = $uid LIMIT 1");
    foreach ($results AS $result) {
           $name = $result->name;
    } 
    if (empty($name)) {
        $account = user_load($uid);
        $name = $account->name;
    }
    if ($user->uid != $uid) {
       $ret .= '<h3>You are visiting <br /> Dashboard of '.strtoupper($name).'</h3>';
    }
    else {
       $ret .= '<h3>Dashboard of '.strtoupper($name).'</h3>';
    }
    // get user contact link (only for visitor)
    // get user follow link (only for visitor)
    if ($user->uid != $uid) {
       $row[] = l("Contact ".$name,'user/'.$uid.'/contact');
       $row[] = flag_create_link('follow',$uid);
       $rows[] = array('data' => $row,'class'=>array('dash-row'));
    }
    $row = array();
    //$ret .= '<div class="dashboard-name">Name: '.strtoupper($name).'</div>';
    // member since info
    $results = db_query("SELECT u.created FROM {users} u WHERE uid = $uid LIMIT 1");
    foreach ($results AS $result) {
        $membersince = date("d F, Y",$result->created);
    } 
    $row[] = '<div class="label">Member Since: </div>';
    $row[] = '<div class="dashboard-membersince">'.$membersince.'</div>';
    $rows[] = array('data'=>$row,'class' => array('need-row'));
    $row = array();
    // country location (possible display on a map)
    $results = db_query("SELECT a.field_address_country AS country FROM {field_data_field_address} a LEFT JOIN {profile} p ON p.pid = a.entity_id WHERE p.uid = $uid LIMIT 1");
    foreach ($results AS $result) {
        $country = $result->country;
    } 
    if (!empty($country)) {
       $row[] = '<div class="label">Location : </div>';
       $row[] = '<div class="dashboard-country">'.$country.'</div>';
    }
    else {
       $row[] = '<div class="label">Location : </div>';
       $row[] = '<div class="dashboard-country"> NA</div>';
    }
    $rows[] = array('data'=>$row,'class' => array('dash-row'));
    $row = array();
    // how many forum posts
    $results = db_query("SELECT count(nid) AS forumcount FROM {node} WHERE type = 'forum' AND uid = $uid LIMIT 1");
    foreach ($results AS $result) {
        $forumcount = $result->forumcount;
    } 
    $row[] = '<div class="label">Number of forum postings: </div>';
    $row[] = '<div class="dashboard-count"> '.$forumcount.'</div>';
    $rows[] = array('data'=>$row,'class' => array('dash-row'));
    $row = array();
    // how many need posts
    $results = db_query("SELECT count(nid) AS needcount FROM {node} WHERE type = 'need_post' AND uid = $uid LIMIT 1");
    foreach ($results AS $result) {
        $result->needcount == 0 ?
        $needcount = $result->needcount :
        $needcount = $result->needcount.' '.l("View List",$base_url."/need-posts/".$uid);
    } 
    $row[] = '<div class="label">Number of Need postings: </div>';
    $row[] = '<div class="dashboard-count"> '.$needcount.'</div>';
    $rows[] = array('data'=>$row,'class' => array('dash-row'));
    $row = array();
    // how many resource posts
    $results = db_query("SELECT count(nid) AS resourcecount FROM {node} WHERE type = 'resource_post' AND uid = $uid LIMIT 1");
    foreach ($results AS $result) {
        $forumcount = $result->resourcecount;
    } 
    $row[] = '<div class="label">Number of Resource postings: </div>';
    $row[] = '<div class="dashboard-count"> '.$forumcount.'</div>';
    $rows[] = array('data'=>$row,'class'=>array('dash-row'));
    $row = array();
    $row[] = '<div class="label">Number of Matches to date: </div>';
    $row[] = '<div class="dashboard-count"> COMING SOON</div>';
    $rows[] = array('data' => $row,'class'=>array('dash-row'));
    $ret .= theme('table',array('rows'=>$rows));
    // how many matches
    
    return $ret;
}
/**
 * this function is AJAX form call back for a Need form
 **/
function ghn_post_options(&$form,&$form_state) {
   return $form['post_choices_fieldset'];
}
/**
 * this function is a helper AJAX form call back function for a Need form
 **/
function _ghn_post_form_options($service) {
     $results = db_query("SELECT extra FROM {webform_component} WHERE cid = $service AND nid = 15 LIMIT 1");
     foreach ($results AS $result => $component) {
             $str = $component->extra;
             $tmp = unserialize($str);
             $tmp1 = explode(';',$tmp['items']);
             $choices = $tmp1[0];
             $options = explode('**',$choices);
             $ret = array();
             $i = 0;
             foreach ($options AS $option) {
                     $opt = substr($option,strpos($option,'|')+1);
                     if ($opt != '')
                        $ret[$i++] = $opt;
             }
     }
     return $ret;
     //return array('0'=>$service,'1'=>$service);
}
/** 
 * customing Follower block
 **/
function ghn_followers($uid) {
    global $user,$base_url,$theme_path;
    $output = '';
    $followers = array();
// get all the users this user is following
         $results = db_query("SELECT content_id AS fuid FROM {flag_content} WHERE uid = $uid and content_type = 'user' ");
          foreach ($results AS $result) {
                  $followers[]= $result;
          }
    $row = array();
    $rows = array();
    $i = 3; 
    if (count($followers) > 0) {
      $i = 0;
      $row = array();
      $default_uri = $base_url.'/'.$theme_path.'/images/picture-default.jpg';
      foreach ($followers as $follower) {
          $account = user_load($follower->fuid);
          if ($i <= 2) {
             if ($account->picture)
                $pic = theme('image_style',array('path' => $account->picture->uri, 'style_name' => 'thumbnail'));
             else
                $pic = theme('image',array('path' => $default_uri, 'style_name' => 'thumbnail'));
             $ulink = '<a href="'.$base_url.'/dashboard/'.$account->uid.'">'.$pic.'</a>';
             $row[$i++] = $ulink;
          }
          else {
               $rows[] = array('data' => $row,'class'=>array('follower-row'));
               $row = array();
               $i = 0;
               $pic = theme('image_style',array('path' => $account->picture->uri, 'style_name' => 'thumbnail'));
               $ulink = '<a href="'.$base_url.'/dashboard/'.$account->uid.'">'.$pic.'</a>';
               $row[$i++] = $pic;
          }
      }
    }
    $rows[] = array('data' => $row,'class'=>array('follower-row'));
    $output = theme('table',array('rows'=>$rows));
    return $output;
}
/** 
 * customing Latest visitor block
 **/
function ghn_latest_visitors($uid) {
    global $user,$base_url,$theme_path;
    $output = '';
    $visitors = user_visits_latest($uid, 5);
    $rows = array();
    $i = 3; 
    if (is_array($visitors)) {
      $i = 0;
      $j = 0;
      $row = array();
      $default_uri = $base_url.'/'.$theme_path.'/images/picture-default.jpg';
      foreach ($visitors as $visitor) {
          $account = user_load($visitor->vuid);
          if ($i <= 2) {
             if ($account->picture)
                $pic = theme('image_style',array('path' => $account->picture->uri, 'style_name' => 'thumbnail'));
             else
                $pic = theme('image',array('path' => $default_uri, 'style_name' => 'thumbnail'));
             $ulink = '<a href="'.$base_url.'/dashboard/'.$account->uid.'">'.$pic.'</a>';
             $row[$i++] = $ulink;
          }
          else {
               $rows[] = array('data' => $row,'class'=>array('visitor-row'));
               $row = array();
               $i = 0;
               $pic = theme('image_style',array('path' => $account->picture->uri, 'style_name' => 'thumbnail'));
               $ulink = '<a href="'.$base_url.'/dashboard/'.$account->uid.'">'.$pic.'</a>';
               $row[$i++] = $pic;
          }
      }
    }
    $rows[] = array('data' => $row,'class'=>array('visitor-row'));
    $output = theme('table',array('rows'=>$rows));
    return $output;
}
/**
 * GHN request and need post submit
 **/
function ghn_post_submit(&$form,&$form_state) {
         global $user,$node;
         $form_state['redirect'] = 'dashboard/'.$user->uid;
/*
         $tmp = var_export($node,TRUE);    
         $title = $form_state['input']['title'];
         $service  = $form_state['input']['field_clinical_services']['und'];
         $choice = $form_state['input']['choices'];
//$tmp = var_export($_POST,TRUE);    
print '<pre>';
print $tmp;
print '</pre>';
*/
         $tmp = var_export($form_state['redirect'],TRUE);    
drupal_set_message($tmp);
}
